@model LoggingViewModel

@{
    ViewData["Title"] = "Steeltoe Actuators - Logging";
}

<div class="text-center">
    <h1>Dynamic Logging</h1>
</div>

<div class="text-center log-description">
    <p>Steeltoe's Dynamic Logging framework can alter log levels through http requests.<br />Select the various levels below to alter
    the given log level of the desired namespace.</p>
</div>

<div>
    <table class="table log-table text-white">
        <thead>
            <tr>
                <th>
                    <form asp-action="Logging" method="get">
                        <div class="form-row align-items-center">
                            <div class="col-auto">
                                <input type="text" class="form-control" placeholder="Search Namespace" name="searchFilter" value="@ViewData["SearchFilter"]" />
                            </div>
                            <div class="col-auto">
                                <button type="submit" class="btn btn-primary">Search</button>
                            </div>
                        </div>
                    </form>

                    @if (Model.TotalPages > 1)
                    {
                        <div>
                            <br />
                            <ul class="inline-list">
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    if (Model.PageIndex == i)
                                    {
                                        <li class="inline-list-item active">@i</li>
                                    }
                                    else
                                    {
                                        <li class="inline-list-item">
                                            <a asp-action="Logging"
                                               asp-route-pageIndex="@i"
                                               asp-route-searchFilter="@ViewData["SearchFilter"]">
                                                @i
                                            </a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.LogLevels)
            {
                <tr>
                    <td>
                        <span class="logger">@log.Namespace</span>
                        <ul class="inline-list">
                            @foreach (var level in Model.AvailableLevels)
                            {
                                if (level.ToLower() != log.Level?.ToLower())
                                {
                                    <li class="inline-list-item">
                                        <a asp-action="SetLogLevel"
                                           asp-route-logger="@log.Namespace"
                                           asp-route-newLevel="@level"
                                           asp-route-pageIndex="@Model.PageIndex"
                                           asp-route-searchFilter="@ViewData["SearchFilter"]">
                                            @level
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="inline-list-item active">@level</li>
                                }
                            }
                        </ul>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>