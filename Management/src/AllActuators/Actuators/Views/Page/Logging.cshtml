@model LogLevelsAndNamespaces

@{
    ViewData["Title"] = "Steeltoe Actuators - Logging";
}

<div class="text-center">
    <h1>Dynamic Logging</h1>
</div>

<div class="text-center log-description">
    <p>Steeltoe's Dynamic Logging framework can alter log levels through http requests.<br />Select the various levels below to alter
    the given log level of the desired namespace.</p>
</div>

<form asp-action="Logging" method="get">
    <div class="form-actions">
        <p>
            Filter: <input type="text" name="filter" value="@ViewData["Filter"]" />
            <input type="submit" value="Filter" class="btn btn-default" /> |
        </p>
    </div>
</form>

<table class="table log-table text-white">
    <thead>
        <tr>
            <th>Namespace</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var logger in Model.Loggers)
        {
            <tr>
                <td>
                    <span class="logger">@logger.Key</span>
                    <ul class="log-level-list">
                        @foreach (var level in Model.Levels)
                        {
                            if (level.ToLower() != logger.Value.EffectiveLevel?.ToLower())
                            {
                                <li class="log-level">
                                    <a asp-action="SetLogLevel"
                                       asp-route-logger="@logger.Key"
                                       asp-route-newLevel="@level">
                                        @level
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="log-level active">@level</li>
                            }
                        }
                    </ul>
                </td>
            </tr>
        }
    </tbody>
</table>
